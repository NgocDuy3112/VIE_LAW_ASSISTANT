services:
  valkey-rate-limit:
    container_name: valkey-rate-limit
    image: valkey/valkey:8.1.1-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./configs/valkey-rate-limit.conf:/configs/valkey.conf
      - ./data/valkey-rate-limit:/data
    command: valkey-server /configs/valkey.conf
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - vie-law-assistant-network
    profiles:
      - testing
      - developer
      - production

  valkey-cache:
    container_name: valkey-cache
    image: valkey/valkey:8.1.1-alpine
    restart: unless-stopped
    ports:
      - "6380:6380"
    volumes:
      - ./configs/valkey-cache.conf:/configs/valkey.conf
      - ./data/valkey-cache:/data
    command: valkey-server /configs/valkey.conf
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - vie-law-assistant-network
    profiles:
      - developer
      - production

  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:v1.15.0
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__PATH=/qdrant/storage
    networks:
      - vie-law-assistant-network
    profiles:
      - developer
      - production

  postgresql-user:
    container_name: postgresql-user
    image: postgres:17.5-bullseye
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user
    networks:
      - vie-law-assistant-network
    volumes:
      - ./data/postgresql/user:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d user"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    profiles:
      - production
      - developer

  auth-service:
    container_name: auth-service
    build:
      context: ./services/auth-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./services/auth-service/app:/src/app
      - ./configs/.env.auth-service:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    entrypoint: /src/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - vie-law-assistant-network
    profiles:
      - developer
      - production

  agent-service:
    container_name: agent-service
    build:
      context: ./services/agent-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./services/agent-service/app:/src/app
      - ./configs/.env.agent-service:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    entrypoint: /src/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - valkey-rate-limit
      # - auth-service
    networks:
      - vie-law-assistant-network
    profiles:
      - testing
      - developer
      - production

  document-service:
    container_name: document-service
    build:
      context: ./services/document-service
    restart: unless-stopped
    ports:
      - "8002:8002"
    volumes:
      - ./services/document-service/app:/src/app
      - ./configs/.env.document-service:/src/configs/.env
      - ./encoders/embedding:/src/encoders/embedding
      - ./encoders/sparse-embedding:/src/encoders/sparse-embedding
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    entrypoint: /src/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - qdrant
      - valkey-rate-limit
      - valkey-cache
      - auth-service
    networks:
      - vie-law-assistant-network
    profiles:
      - developer
      - production

  web-crawler-service:
    container_name: web-crawler-service
    build:
      context: ./services/web-crawler-service
    restart: unless-stopped
    ports:
      - "8003:8003"
    volumes:
      - ./services/web-crawler-service/app:/src/app
    environment:
      - PYTHONPATH=/src
    entrypoint: /src/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - auth-service
    networks:
      - vie-law-assistant-network
    profiles:
      - developer
      - production



networks:
  vie-law-assistant-network:
    driver: bridge
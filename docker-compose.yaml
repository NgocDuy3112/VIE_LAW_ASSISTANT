services:
  valkey-rate-limit:
    container_name: valkey-rate-limit
    image: valkey/valkey:8.1.1-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./configs/valkey-rate-limit.conf:/configs/valkey.conf
      - ./data/valkey-rate-limit:/data
    command: valkey-server /configs/valkey.conf
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - vie-law-assistant
    profiles:
      - developer
      - production

  valkey-cache:
    container_name: valkey-cache
    image: valkey/valkey:8.1.1-alpine
    restart: unless-stopped
    ports:
      - "6380:6380"
    volumes:
      - ./configs/valkey-cache.conf:/configs/valkey.conf
      - ./data/valkey-cache:/data
    command: valkey-server /configs/valkey.conf
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - vie-law-assistant
    profiles:
      - developer
      - production

  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:v1.14.1
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__PATH=/qdrant/storage
    networks:
      - vie-law-assistant
    profiles:
      - developer
      - production

  llm-service:
    container_name: llm-service
    build:
      context: ./services/llm-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./services/llm-service/app:/src/app
      - ./configs/.env.llm-service:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    entrypoint: /src/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - valkey-rate-limit
    networks:
      - vie-law-assistant
    profiles:
      - developer
      - production

  retriever-service:
    container_name: retriever-service
    build:
      context: ./services/retriever-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./services/retriever-service/app:/src/app
      - ./configs/.env.retriever-service:/src/configs/.env
    environment:
      - ENV_FILE=/src/configs/.env
      - PYTHONPATH=/src
    entrypoint: /src/entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - qdrant
      - valkey-rate-limit
      - valkey-cache
    networks:
      - vie-law-assistant
    profiles:
      - developer
      - production

networks:
  vie-law-assistant:
    driver: bridge